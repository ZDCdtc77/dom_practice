{"version":3,"sources":["webpack://$/webpack/universalModuleDefinition","webpack://$/webpack/bootstrap","webpack://$/./lib/poly-fill.js","webpack://$/./lib/dom-core.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","assign","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","this","document","ownerDocument","querySelectorAll","item","_polyFill","isDOMList","selector","HTMLCollection","NodeList","default","eventList","DomElement","html","div","nodeType","selectorResult","Array","replace","trim","indexOf","createElement","innerHTML","children","result","$","constructor","forEach","fn","elem","clone","deep","cloneList","push","cloneNode","first","last","on","type","types","split","addEventListener","e","off","removeEventListener","attr","val","getAttribute","setAttribute","addClass","className","arr","filter","join","removeClass","css","shiftKey","all","letter","toUpperCase","style","_typeof","element","keys","prop","show","hide","childNodes","append","$children","child","appendChild","prepend","insertBefore","firstChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","textContent","focus","equal","$elem","referenceNode","parentNode","insertAfter","lastChild","nextSibling","siblings","prev","previousElementSibling","next","nextElementSibling","closest","parentUntil","el","hasClass","offAll"],"mappings":"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","file":"./release/dom-core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"$\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$\"] = factory();\n\telse\n\t\troot[\"$\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*\n    poly-fill\n*/\n\nexport default function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function(target, varArgs) { // .length of function is 2\n            if (target == null) { // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object')\n            }\n\n            var to = Object(target)\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index]\n\n                if (nextSource != null) { // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey]\n                        }\n                    }\n                }\n            }\n            return to\n        }\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = \n            Element.prototype.matchesSelector || \n            Element.prototype.mozMatchesSelector ||\n            Element.prototype.msMatchesSelector || \n            Element.prototype.oMatchesSelector || \n            Element.prototype.webkitMatchesSelector ||\n            function(s) {\n                var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                    i = matches.length;\n                while (--i >= 0 && matches.item(i) !== this) {}\n                return i > -1;            \n            };\n    }\n\n}\n","import polyfill from './poly-fill'\npolyfill();\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    let div\n    div = document.createElement('div')\n    div.innerHTML = html\n    return div.children\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true\n    }\n    return false\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    const result = document.querySelectorAll(selector)\n    if (isDOMList(result)) {\n        return result\n    } else {\n        return [result]\n    }\n}\n\n// 记录所有的事件绑定\nconst eventList = []\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector\n    }\n\n    this.selector = selector\n    const nodeType = selector.nodeType\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    let selectorResult = []\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector]\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector]\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim()\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector)\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector)\n        }\n    }\n\n    const length = selectorResult.length\n    if (!length) {\n        // 空数组\n        return this\n    }\n\n    // 加入 DOM 节点\n    let i\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i]\n    }\n    this.length = length\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function (fn) {\n        let i\n        for (i = 0; i < this.length; i++) {\n            const elem = this[i]\n            const result = fn.call(elem, elem, i)\n            if (result === false) {\n                break\n            }\n        }\n        return this\n    },\n\n    // clone\n    clone: function (deep) {\n        const cloneList = []\n        this.forEach(elem => {\n            cloneList.push(elem.cloneNode(!!deep))\n        })\n        return $(cloneList)\n    },\n\n    // 获取第几个元素\n    get: function (index) {\n        const length = this.length\n        if (index >= length) {\n            index = index % length\n        }\n        return $(this[index])\n    },\n\n    // 第一个\n    first: function () {\n        return this.get(0)\n    },\n\n    // 最后一个\n    last: function () {\n        const length = this.length\n        return this.get(length - 1)\n    },\n\n    // 绑定事件\n    on: function (type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector\n            selector = null\n        }\n\n        // type 是否有多个\n        let types = []\n        types = type.split(/\\s+/)\n\n        return this.forEach(elem => {\n            types.forEach(type => {\n                if (!type) {\n                    return\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                })\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn)\n                    return\n                }\n\n                // 有代理\n                elem.addEventListener(type, e => {\n                    const target = e.target\n                    if (target.matches(selector)) {\n                        fn.call(target, e)\n                    }\n                })\n            })\n        })\n    },\n\n    // 取消事件绑定\n    off: function (type, fn) {\n        return this.forEach(elem => {\n            elem.removeEventListener(type, fn)\n        })\n    },\n\n    // 获取/设置 属性\n    attr: function (key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key)\n        } else {\n            // 设置值\n            return this.forEach(elem => {\n                elem.setAttribute(key, val)\n            })\n        }\n    },\n\n    // 添加 class\n    addClass: function(className) {\n        if (!className) {\n            return this\n        }\n        return this.forEach(elem => {\n            let arr\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/)\n                arr = arr.filter(item => {\n                    return !!item.trim()\n                })\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className)\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ')\n            } else {\n                elem.className = className\n            }\n        })\n    },\n\n    // 删除 class\n    removeClass: function (className) {\n        if (!className) {\n            return this\n        }\n        return this.forEach(elem => {\n            let arr\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/)\n                arr = arr.filter(item => {\n                    item = item.trim()\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false\n                    }\n                    return true\n                })\n                // 修改 elem.class\n                elem.className = arr.join(' ')\n            }\n        })\n    },\n\n    // 修改 css\n    css: function (key, val) {\n        function shiftKey(key) {\n            key = key.replace(/-([a-z])/ig,function (all,letter) {\n                return letter.toUpperCase();\n            })\n\n            return key;\n        }\n        if (typeof key === 'string' && typeof val === \"undefined\" ) {//获取样式\n            //key转换为驼峰形式\n            key = shiftKey(key);\n\n            const el = this[0];\n           /*\n            方式1：返回计算属性\n            const win = el.ownerDocument.defaultView;\n            return win.getComputedStyle(el,null)[key];*/\n\n            /*方式2：返回style对象属性*/\n            return el.style[key];\n        }\n        else{\n            switch (typeof key) {\n                case 'object':\n                    this.forEach((element) => {\n                        Object.keys(key).forEach((prop) => {\n                            prop = shiftKey(prop);\n                            element.style[prop] = key[prop];\n                        });\n                    });\n                    break;\n                case 'string':\n                    this.forEach((element) => {\n                        key = shiftKey(key);\n                        element.style[key] = val\n                    });\n                    break;\n            }\n        }\n\n        return this;\n    },\n\n    // 显示\n    show: function () {\n        return this.css('display', 'block')\n    },\n\n    // 隐藏\n    hide: function () {\n        return this.css('display', 'none')\n    },\n\n    // 获取子节点\n    children: function () {\n        const elem = this[0]\n        if (!elem) {\n            return null\n        }\n\n        return $(elem.children)\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function () {\n        const elem = this[0]\n        if (!elem) {\n            return null\n        }\n\n        return $(elem.childNodes)\n    },\n\n    // 增加子节点\n    append: function($children) {\n        return this.forEach(elem => {\n            $children.forEach(child => {\n                elem.appendChild(child)\n            })\n        })\n    },\n\n    prepend:function($children){\n        this.forEach(elem=>{\n            for(let i=$children.length-1;i>=0;i--){\n                elem.insertBefore($children[i],elem.firstChild)\n            }\n        })\n    },\n\n    // 移除当前节点\n    remove: function () {\n        return this.forEach(elem => {\n            if (elem.remove) {\n                elem.remove()\n            } else {\n                const parent = elem.parentElement\n                parent && parent.removeChild(elem)\n            }\n        })\n    },\n\n    // 是否包含某个子节点\n    isContain: function ($child) {\n        const elem = this[0]\n        const child = $child[0]\n        return elem.contains(child)\n    },\n\n    // 尺寸数据\n    getSizeData: function () {\n        const elem = this[0]\n        return elem.getBoundingClientRect()  // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function () {\n        const elem = this[0]\n        return elem.nodeName\n    },\n\n    // 从当前元素查找\n    find: function (selector) {\n        const elem = this[0]\n        return $(elem.querySelectorAll(selector))\n    },\n\n    // 获取当前元素的 text\n    text: function (val) {\n        if (!val) {\n            // 获取 text\n            const elem = this[0]\n            if(elem.textContent){return elem.textContent};\n            return elem.innerHTML.replace(/<.*?>/g, () => '')\n        } else {\n            // 设置 text\n            return this.forEach(elem => {\n                if(elem.textContent){\n                    elem.textContent=val\n                }\n                else{\n                    elem.innerHTML = val\n                }\n            })\n        }\n    },\n\n    // 获取 html\n    html: function (value) {\n        const elem = this[0]\n        if (value == null) {\n            return elem.innerHTML\n        } else {\n            elem.innerHTML = value\n            return this\n        }\n    },\n\n    // 获取 value\n    val: function () {\n        const elem = this[0]\n        return elem.value.trim()\n    },\n\n    // focus\n    focus: function () {\n        return this.forEach(elem => {\n            elem.focus()\n        })\n    },\n\n    // parent\n    parent: function () {\n        const elem = this[0]\n        return $(elem.parentElement)\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function ($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem\n        } else {\n            return this[0] === $elem[0]\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function (selector) {\n        const $referenceNode = $(selector)\n        const referenceNode = $referenceNode[0]\n        if (!referenceNode) {\n            return this\n        }\n        return this.forEach(elem => {\n            const parent = referenceNode.parentNode\n            parent.insertBefore(elem, referenceNode)\n        })\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function (selector) {\n        const $referenceNode = $(selector)\n        const referenceNode = $referenceNode[0]\n        if (!referenceNode) {\n            return this\n        }\n        return this.forEach(elem => {\n            const parent = referenceNode.parentNode\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem)\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling)\n            }\n        })\n    },\n\n    siblings:function(){\n        const elem = this[0];\n        const parent = this[0].parentNode;\n\n        return $(Array.prototype.filter.call(parent.children, (child) =>\n            child !== elem\n        ))\n    },\n\n    prev:function(){\n        return $(this[0].previousElementSibling);\n    },\n\n    next:function(){\n        return $(this[0].nextElementSibling);\n    },\n\n    closest:function(selector){\n        let elem = this[0];\n        const matchesSelector = elem.matches;\n\n        while(elem){\n            if(matchesSelector.call(elem,selector)){\n                return $(elem);\n            }\n            else{\n                elem = elem.parentElement;\n            }\n        }\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function (selector,filter) {\n        let el=this[0];\n        const result = [];\n        const matchesSelector = el.matches;\n\n        // match start from parent\n        el = el.parentElement;\n        while (el && !matchesSelector.call(el, selector)) {\n            if (!filter) {\n                result.push(el);\n            } else {\n                if (matchesSelector.call(el, filter)) {\n                    result.push(el);\n                }\n            }\n            el = el.parentElement;\n        }\n        return $(result);\n    },\n\n    hasClass:function (className) {\n        const elem = this[0];\n        return -1!==elem.className.indexOf(className)\n    }\n}\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector)\n}\n\n// 解绑所有事件\n$.offAll = function () {\n    eventList.forEach(item => {\n        const elem = item.elem\n        const type = item.type\n        const fn = item.fn\n        // 解绑\n        elem.removeEventListener(type, fn)\n    })\n}\n\nexport default $\n"],"sourceRoot":""}